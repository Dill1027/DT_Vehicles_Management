// Clear all data from MongoDB database
// This script will remove all vehicles and other data from the database

require('dotenv').config();
const mongoose = require('mongoose');

// Import models
const Vehicle = require('../models/Vehicle');
const Notification = require('../models/Notification');

const clearDatabase = async () => {
  try {
    console.log('üîó Connecting to MongoDB...');
    await mongoose.connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log('‚úÖ Connected to MongoDB');

    // Clear all collections
    console.log('üßπ Clearing all data from database...');
    
    // Drop collections completely to remove all data and indexes
    try {
      await mongoose.connection.db.dropCollection('vehicles');
      console.log('‚úÖ Vehicles collection cleared');
    } catch (error) {
      console.log('‚ÑπÔ∏è Vehicles collection was already empty:', error.message);
    }
    
    try {
      await mongoose.connection.db.dropCollection('notifications');
      console.log('‚úÖ Notifications collection cleared');
    } catch (error) {
      console.log('‚ÑπÔ∏è Notifications collection was already empty:', error.message);
    }

    console.log('üéâ Database completely cleared!');
    console.log('');
    console.log('üìù Database is now empty and ready for fresh data input');
    console.log('üîß You can now add vehicles through the application forms');
    
  } catch (error) {
    console.error('‚ùå Error clearing database:', error);
  } finally {
    console.log('üîå Disconnecting from MongoDB...');
    await mongoose.disconnect();
    console.log('‚úÖ Disconnected from MongoDB');
    process.exit(0);
  }
};

// Run the clearing process
clearDatabase();
